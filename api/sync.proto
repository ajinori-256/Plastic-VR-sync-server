// $cd api
// $ protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative sync.proto
syntax = "proto3";
package app;
option go_package = "pkg/grpc";
service App {
  rpc Start(stream ClientMessage) returns (stream ServerMessage){}
}

message ClientMessage {
  oneof data {
    LoginRequest login_request = 1;
    CreateRoomRequest create_room_request = 2;
    JoinRoomRequest join_room_request = 3;
    LeaveRoomRequest leave_room_request = 4;
    PlayerDataRequest player_data_request = 5;
  }
}
message ServerMessage {
  oneof data {
    LoginResponse login_response = 1;
    CreateRoomResponse create_room_response= 2;
    JoinRoomResponse join_room_response = 3;
    JoinRoomNotification join_room_notification = 4;
    LeaveRoomResponse leave_room_response = 5;
    LeaveRoomNotification leave_room_notification = 6;
    PlayerDataResponse player_data_response = 7;
  }
}

message LoginRequest {
  string player_id = 1;
}

message LoginResponse {
  Error error =1;
}

message CreateRoomRequest{
  RoomConfig room_config = 1;
}
message CreateRoomResponse{
  string room_id = 1;
  Error error = 2;
}
message JoinRoomRequest {
  string room_id = 1;
}
message JoinRoomResponse {
  string room_id = 1;
  repeated PlayerData player_data = 2;
  Error error =3;
}

message RoomConfig {
  RoomType room_type = 1;
  uint32 max_players = 2;
}

message JoinRoomNotification {
  string room_id = 1;
  string player_id = 2;
  PlayerData player_data = 3;

}

message LeaveRoomRequest {
string room_id = 1;
}

message LeaveRoomResponse{
string room_id = 1;
Error error = 2; 
}

message LeaveRoomNotification{
  string room_id = 1;
  string player_id = 2;
}

message ServerNotification{
//place holder
}

message PlayerDataRequest{
  string room_id = 1;
  PlayerData data = 2;
}

message PlayerDataResponse{
  repeated PlayerData data=1;
  Error error = 2;
}
message PlayerData{
  string room_id = 1;
  string player_id = 2;
  Transform  player_transform = 3;
  string avater_url = 4;
}
message Error {
  ErrorCode code = 1;
  string message = 2;
}

enum ErrorCode {
  NONE =0;
  UNAUTHORIZED = 1;
  ROOM_IS_FULL =2;
  NO_PERMISSION  =3;
}
message Transform {
Vec3 positon = 1;
Vec4 rotation = 2;
Vec3 size = 3;
}

message Vec3{
  float x = 1;
  float y = 2;
  float z = 3;
}
message Vec4{
  float x = 1;
  float y = 2;
  float z = 3;
  float w = 4;
}

enum RoomType{
  GLOBAL_PUBLIC = 0;
  LOCAL_PUBLIC = 1;
  FRIENDS_PLUS = 2;
  FRIENDS_ONLY = 3; 
  INVITE_PLUS = 4;
  INVITE_ONLY = 5;
}







